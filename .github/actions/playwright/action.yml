name: Playwright Tests
description: Run playwright tests
inputs:
  yarn-script:
    description: The yarn script to run in playwright workspace
    required: true
  ludos-profiles:
    description: Ludos profiles as comma separated list
    required: true
  browsers:
    description: The browsers to install
    required: false
    default: chromium
  testikayttaja-yllapitaja-username:
    description: YllÃ¤pitÃ¤jÃ¤-testikÃ¤yttÃ¤jÃ¤n kÃ¤yttÃ¤jÃ¤tunnus
    default: "username"
    required: false
  testikayttaja-yllapitaja-password:
    description: YllÃ¤pitÃ¤jÃ¤-testikÃ¤yttÃ¤jÃ¤n salasana
    default: "password"
    required: false
  ludos-palvelukayttaja-username:
    description: Ludos-palvelukÃ¤yttÃ¤jÃ¤n kÃ¤yttÃ¤jÃ¤tunnus
    required: true
  ludos-palvelukayttaja-password:
    description: Ludos-palvelukÃ¤yttÃ¤jÃ¤n salasana
    required: true
runs:
  using: composite
  steps:
    - uses: actions/setup-node@v4
      with:
        node-version-file: .nvmrc
        cache: yarn
    - name: Set up Java 17
      uses: actions/setup-java@v4
      with:
        java-version: 17
        distribution: zulu
    - name: 'Start database'
      shell: bash
      run: docker compose up -d
    - uses: actions/download-artifact@v4
      with:
        name: jar
        path: server/build/libs
    - name: 'ðŸ”¨ Start frontend and backend'
      uses: ./.github/actions/start_service
      with:
        ludos-profiles: ${{ inputs.ludos-profiles }}
        ludos-palvelukayttaja-username: ${{ inputs.ludos-palvelukayttaja-username }}
        ludos-palvelukayttaja-password: ${{ inputs.ludos-palvelukayttaja-password }}
    - name: yarn install
      shell: bash
      run: yarn install --frozen-lockfile
    - name: 'Get playwright version'
      id: playwright_version
      shell: bash
      run: echo "playwright_version=$(npx playwright --version | cut -d' ' -f2)" >> $GITHUB_OUTPUT
    - name: List Playwright Ubuntu dependencies
      id: playwright-ubuntu-deps
      shell: bash
      run: echo playwright-ubuntu-deps=$(npx playwright install-deps --dry-run ${{ inputs.browsers }} 2>&1 | grep -Po '(?<=no-install-recommends ).*(?=")') >> $GITHUB_OUTPUT
    - name: Cache Playwright browser
      uses: actions/cache@v4
      with:
        path: ~/.cache/ms-playwright
        key: ${{ runner.os }}-playwright-${{ steps.playwright_version.outputs.playwright_version }}
        restore-keys: |
          ${{ runner.os }}-playwright-
    - uses: tecolicom/actions-use-apt-tools@v1
      with:
        tools: ${{ steps.playwright-ubuntu-deps.outputs.playwright-ubuntu-deps }}
    - name: Install Playwright Browsers
      shell: bash
      run: npx playwright install ${{ inputs.browsers }}
    - name: Run Playwright tests
      shell: bash
      env:
        TESTIKAYTTAJA_YLLAPITAJA_USERNAME: ${{ inputs.testikayttaja-yllapitaja-username }}
        TESTIKAYTTAJA_YLLAPITAJA_PASSWORD: ${{ inputs.testikayttaja-yllapitaja-password }}
      run: yarn workspace playwright ${{ inputs.yarn-script }}
    - name: Calculate artifact name suffix
      id: artifact-name-suffix
      shell: bash
      run: echo artifact-name-suffix=$(echo ${{ inputs.yarn-script }} | sed 's/:/-/g') >> $GITHUB_OUTPUT
    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-debug-artifacts-${{ steps.artifact-name-suffix.outputs.artifact-name-suffix }}
        path: |
          playwright/test-results/
          service.log
        retention-days: 30
